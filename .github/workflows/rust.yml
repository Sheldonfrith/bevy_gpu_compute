name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        crate: ['bevy_gpu_compute_macro', 'bevy_gpu_compute_core', 'bevy_gpu_compute']
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ matrix.crate }}-${{ hashFiles('**/Cargo.toml') }}
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run cargo test
        run: cargo test
        working-directory: ${{ matrix.crate }}

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      matrix:
        crate: ['bevy_gpu_compute_macro', 'bevy_gpu_compute_core', 'bevy_gpu_compute']
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ matrix.crate }}-${{ hashFiles('**/Cargo.toml') }}
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - name: Install Dependencies
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
      - name: Run clippy
        run: cargo clippy -p ${{ matrix.crate }} -- -D warnings
        working-directory: ${{ matrix.crate }}

  format:
    name: Format
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        crate: ['bevy_gpu_compute_macro', 'bevy_gpu_compute_core', 'bevy_gpu_compute']
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4
      - name: Install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt
      - name: Run cargo fmt
        run: cargo fmt -- --check
        working-directory: ${{ matrix.crate }}
  
  # examples:
  #   name: Run examples
  #   runs-on: ubuntu-latest
  #   timeout-minutes: 10
  #   strategy:
  #     matrix:
  #       example: ['collision_detection_demonstration']
  #   steps:
  #     - name: Checkout sources
  #       uses: actions/checkout@v4
  #     - name: Cache
  #       uses: actions/cache@v4
  #       with:
  #         path: |
  #           ~/.cargo/bin/
  #           ~/.cargo/registry/index/
  #           ~/.cargo/registry/cache/
  #           ~/.cargo/git/db/
  #           target/
  #         key: ${{ runner.os }}-cargo-example-bevy_gpu_compute-${{ hashFiles('**/Cargo.toml') }}
  #     - name: Install nightly toolchain
  #       uses: dtolnay/rust-toolchain@nightly
  #     - name: Install Dependencies
  #       run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev
  #     - name: Run cargo examples
  #       run: cargo run --example ${{ matrix.example }}
  #       working-directory: bevy_gpu_compute